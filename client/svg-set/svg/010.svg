<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 660 1080">
  
  <title></title>

  <desc>
  </desc>

  <script type="application/x-javascript"><![CDATA[
    var SpiralMaker = function()
    {
      var spiralType=1;    //types: 1-Archimedean, 2-Fibonacci
      var overlay = false;
      var incDeg = 30;
      var segments = 16;
      var scale = 8*Math.floor(400/segments);
      var deg=0;
      var cw = true;
      var ymult=-1;
      var rotate=0;
      var repeat=0;
      
      var timerId = null;
      var rgb = new Array(255,0,0);
      var hexcolor = "FF0000";

      var decimals=2;
      var min = {x:0, y:0}  // Min Point
      var max = {x:0, y:0}  // Max Point
      
      var ns1 = "http://www.w3.org/2000/svg";
      var ns2 = "http://www.w3.org/1999/xlink";

      window.addEventListener("load",init);
      
      function init()
      {
        document.getElementById("spiral").setAttribute("d","M0,0");

        initEvents()
      }
    
      function drawSpiral()
      {
        if(spiralType==1) drawArchimedeanSpiral();
        if(spiralType==2) drawFibonacciSpiral();
      }
      
      function drawArchimedeanSpiral()
      {
        var i;
        var cx;
        var cy;
        
        //Cubic Bezier Curve Points
        var p0 = {x:0, y:0}  // Start Point
        var p1 = {x:0, y:0}  // Control Point 1
        var p2 = {x:0, y:0}  // Control Point 2
        var p3 = {x:0, y:0}  // End Point
        var cp = {x:0, y:0}  // Current Position
        
        var c = {x:0, y:0}   // Temp Variable
        var d = {x:0, y:0}   // Temp Variable
        var f = {x:0, y:0}   // Point on curve 1/3 of way from p0 to p3
        var g = {x:0, y:0}   // Point on curve 2/3 of way from p0 to p3

        min = {x:0, y:0}  // Min Point
        max = {x:0, y:0}  // Max Point
        
        var strPath="M0,0";
        deg=0;
        scale = 3*Math.floor(400/segments); 
               
        for(i=0;i<segments;i++)
        {
          CalcPoint(p0);
          if(cw) deg +=incDeg; else  deg -=incDeg;

          CalcPoint(f);
          if(cw) deg +=incDeg; else  deg -=incDeg;
        
          CalcPoint(g);
          if(cw) deg +=incDeg; else  deg -=incDeg;

          CalcPoint(p3);
         
          c.x = round((f.x - 8/27*p0.x - 1/27*p3.x),decimals);
          c.y = round((f.y - 8/27*p0.y - 1/27*p3.y),decimals);
        
          d.x = round((g.x - 1/27*p0.x - 8/27*p3.x),decimals);
          d.y = round((g.y - 1/27*p0.y - 8/27*p3.y),decimals);

          p2.x = round((3*d.x-9*c.x/6),decimals);
          p2.y = round((3*d.y-9*c.y/6),decimals);
        
          p1.x = round((9*c.x-2*p2.x)/4,decimals);
          p1.y = round((9*c.y-2*p2.y)/4,decimals);
        
          strPath += "c"+round((p1.x-p0.x),decimals)+","+round((p1.y-p0.y),decimals)+","
          strPath += round((p2.x-p0.x),decimals)+","+round((p2.y-p0.y),decimals)+","
          strPath += round((p3.x-p0.x),decimals)+","+round((p3.y-p0.y),decimals);
          
          cp.x += p3.x-p0.x;
          cp.y += p3.y-p0.y;
          
          minMax(p0);
          minMax(p1);
          minMax(p2);
          minMax(p3);
          minMax(cp);
          
       }
       

        document.getElementById("rg").setAttribute("cx",Math.round(-1*min.x/(max.x-min.x)*1000)/1000);
        document.getElementById("rg").setAttribute("cy",Math.round(-1*min.y/(max.y-min.y)*1000)/1000);

       if(-1*min.x < max.x) min.x = -1*max.x
       else max.x = -1*min.x;
       
       if(-1*min.y < max.y) min.y = -1*max.y
       else max.y = -1*min.y;
       
       var w = round((max.x-min.x+20),decimals);
       var h = round((max.y-min.y+20),decimals);
       if(w>h) h=w; else w=h;

        var node = document.getElementById("spiralDesign");
        
        node.setAttribute("viewBox","0 0 "+w+" "+h);

        node = document.getElementById("spiral");
        node.setAttribute("d",strPath);
        node.setAttribute("transform","rotate("+rotate+")");
        
        node = document.getElementById("spirals");
        node.setAttribute("transform","translate("+round(w/2,decimals)+","+round(h/2,decimals)+")");
        node.setAttribute("style","fill:none;stroke-width:2px;stroke-linecap:round;");


        node = document.getElementById("rotatedSpirals");
        if(repeat>0)
        {
          var newNode;

          if(node==null)
          {
            node = document.getElementById("spirals");
            newNode = document.createElementNS(ns1,"g");
            newNode.setAttributeNS(null,"id","rotatedSpirals");
            node.appendChild(newNode);
            
            node = document.getElementById("rotatedSpirals");
          }
          else
          {
            while(node.childNodes.length>0) node.removeChild(node.firstChild);
          }

          for(var i=1;i<round(360/repeat,0);i++)
          {
            newNode = document.createElementNS(ns1,"use");
            newNode.setAttributeNS(ns2,"xlink:href","#spiral");
            newNode.setAttributeNS(null,"transform","rotate("+round(i*repeat,2)+")");
          
            node.appendChild(newNode);
          }
        }
        else
        {
          node.parentNode.removeChild(node);
        }
      }
      
      function drawFibonacciSpiral()
      {
        var i;
        
        //Quadradic Bezier Curve Points
        var abs = {x:0, y:0}  // Start Point
        var end = {x:0, y:0}  // End Point
        min = {x:0, y:0}  // Min Point
        max = {x:0, y:0}  // Max Point
        var radius;
        
        var seq=Array(1,1);
        var index=1;
        var sweep=0;
        var xmult=Array(1,-1,-1,1);
        var ymult=Array(-1,-1,1,1);

        var strPath = "M0,0";
        deg=0;
        
        for(i=0;i<segments;i++)
        {
          seq[index+1] = seq[index-1]+seq[index];
          
          radius = seq[i];
          
          end.x = xmult[i%4]*seq[i];
          end.y = ymult[i%4]*seq[i];
          
          sweep=0;
          if(cw)
          {
          	end.y *= -1;
          	sweep=1;
          }

          abs.x += end.x;
          abs.y += end.y;
          
          if(abs.x < min.x) min.x = abs.x
          if(abs.y < min.y) min.y = abs.y
          if(abs.x > max.x) max.x = abs.x
          if(abs.y > max.y) max.y = abs.y

          strPath += "a"+radius+","+radius+",0,0,"+sweep+","+end.x+","+end.y;
          index++;
        }
        abs.x = Math.abs(abs.x);
        abs.y = Math.abs(abs.y);

        if(abs.x > abs.y) box = abs.x; else box = abs.y;
        if(box==1) box = round(box*1.5,2);
        else box = round(box*1.142,2);

        var node =document.getElementById("spiralDesign");
        node.setAttribute("viewBox","0 0 "+2*box+" "+2*box);
        
        node =document.getElementById("spirals");
        node.setAttribute("transform","translate("+box+","+box+") rotate("+rotate+")");
        
        document.getElementById("spiral").setAttribute("d",strPath);

        document.getElementById("rg").setAttribute("cx",Math.round(-1*min.x/(max.x-min.x)*1000)/1000);
        document.getElementById("rg").setAttribute("cy",Math.round(-1*min.y/(max.y-min.y)*1000)/1000);

        node = document.getElementById("rotatedSpirals");
        if(node!=null) while(node.childNodes.length>0) node.removeChild(node.firstChild);
        
        if(repeat>0)
        {
          var newNode;

          if(node==null)
          {
            node = document.getElementById("spirals");
            newNode = document.createElementNS(ns1,"g");
            newNode.setAttributeNS(null,"id","rotatedSpirals");
            node.appendChild(newNode);
            
            node = document.getElementById("rotatedSpirals");
          }

          for(var i=1;i<round(360/repeat,0);i++)
          {
            newNode = document.createElementNS(ns1,"use");
            newNode.setAttributeNS(ns2,"xlink:href","#spiral");
            newNode.setAttributeNS(null,"transform","rotate("+round(i*repeat,2)+")");
          
            node.appendChild(newNode);
          }
        }
      }

      function CalcPoint(p)
      {
        p.x = round(deg/360*scale*Math.cos(deg/180*Math.PI),2);
        p.y = round(deg/360*scale*Math.sin(deg/180*Math.PI),2);
      }

      function minMax(p)
      {
        if(p.x < min.x) min.x = round(p.x,decimals);
        if(p.y < min.y) min.y = round(p.y,decimals);
        if(p.x > max.x) max.x = round(p.x,decimals);
        if(p.y > max.y) max.y = round(p.y,decimals);
      }
      
      function round(n,d)
      {
        var mult = Math.pow(10,d);
        return(Math.round(n*mult)/mult);
      }

      //Code for UI
      var mousedown=false;
      var eventmove = "mousemove";
      var eventclick = "click";
      
      var isTouchDevice = false;
      if((navigator.userAgent.indexOf("iPad")>0) ||
         (navigator.userAgent.indexOf("iPhone")>0) ||
         (navigator.userAgent.indexOf("iPod")>0))
      {
        isTouchDevice = true;
        eventmove = "touchmove";
        eventclick = "touchstart";
      }
      
      function initEvents()
      {
        try
        {
          if(isTouchDevice)
          {
            window.addEventListener("touchstart", function(e) {mousedown=true; }, false);
            window.addEventListener("touchend", function(e) {mousedown=false; }, false);
            window.addEventListener("touchcancel", function(e) {mousedown=false; }, false);
          }
          else
          {
            window.addEventListener("mousedown", function(e) {e.preventDefault(); mousedown=true; }, false);
            window.addEventListener("mouseup", function(e) {e.preventDefault(); mousedown=false; }, false);
          }

          node = document.getElementById("slider1");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) nSpirals(e); }, false);
          
          node = document.getElementById("slider2");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) nSegments(e); }, false);

          node = document.getElementById("getCode");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); showCode(); }, false);

          node = document.getElementById("cb1");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); checkbox(e); }, false);
          
          node = document.getElementById("cb4");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); checkbox(e); }, false);
          
          node = document.getElementById("radio");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); radio(); }, false);
          
          node = document.getElementById("menuicon");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); Menu(); }, false);

          node = document.getElementById("menuexit");
          node.addEventListener(eventclick, function(e) {e.preventDefault(); MenuExit(); }, false);

          node = document.getElementById("sliderred");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) Color(e,1); }, false);
          
          node = document.getElementById("slidergreen");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) Color(e,2); }, false);

          node = document.getElementById("sliderblue");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) Color(e,3); }, false);

          node = document.getElementById("sliderdeg");
          node.addEventListener(eventmove, function(e) {e.preventDefault(); if(mousedown) Rotation(e); }, false);

          drawSpiral();
          
        } catch(e) {}
      }
    

      function nSpirals(e)
      {
        try
        {
          var node;
          var x;
          var min=1;   //Slider Minimum
          var max=36;    //Slider Maximum
          var minx = 0;
          var maxx = 600;

          if(timerId!=null) clearTimeout(timerId);

          var id = e.target.parentNode.getAttribute("id");
          if(id!="slider1") return;

          // SVG point transformation required
          var m = document.getElementById("s1slider").getScreenCTM();
          var p = document.documentElement.createSVGPoint();
          if(isTouchDevice)
          {
            if(e.changedTouches.length>1) return;
            var touch = e.changedTouches[0];
            p.x = touch.clientX;
            p.y = touch.clientY;
          }
          else
          {
            p.x = e.clientX;
            p.y = e.clientY;
          }
          p = p.matrixTransform(m.inverse());
          x = Math.round(p.x*10)/10

          if(x<minx) x=minx;
          if(x>maxx) x=maxx;
        
          node = document.getElementById("slider1");
          node.setAttribute("transform","translate("+x+",0)");

          node = document.getElementById("s1length");
          node.setAttribute("width",x);

          var scale = (max-min)/(maxx-minx)*x + min;
          var value = Math.round(scale);

          node = document.getElementById("slider1Value");
          node.firstChild.nodeValue = value;
          
          repeat = round((360/value)%360,2);
          
          timerId = setTimeout(drawSpiral,50);
          
        }catch(e){}
      }

      function nSegments(e)
      {
        try
        {
          var node;
          var x;
          var min=1;   //Slider Minimum
          var max=200;    //Slider Maximum
          var minx = 0;
          var maxx = 600;
          
          if(spiralType==2) max=25;

          if(timerId!=null) clearTimeout(timerId);

          var id = e.target.parentNode.getAttribute("id");
          if(id!="slider2") return;

          // SVG point transformation required
          var m = document.getElementById("s2slider").getScreenCTM();
          var p = document.documentElement.createSVGPoint();
          if(isTouchDevice)
          {
            if(e.changedTouches.length>1) return;
            var touch = e.changedTouches[0];
            p.x = touch.clientX;
            p.y = touch.clientY;
          }
          else
          {
            p.x = e.clientX;
            p.y = e.clientY;
          }
          p = p.matrixTransform(m.inverse());
          x = Math.round(p.x*10)/10

          if(x<minx) x=minx;
          if(x>maxx) x=maxx;
        
          node = document.getElementById("slider2");
          node.setAttribute("transform","translate("+x+",0)");

          node = document.getElementById("s2length");
          node.setAttribute("width",x);

          var scale = (max-min)/(maxx-minx)*x + min;
          segments = Math.round(scale);

          node = document.getElementById("slider2Value");
          node.firstChild.nodeValue = segments;
          
          timerId = setTimeout(drawSpiral,50);
          
        }catch(e){}
      }
      
      function radio()
      {
        var node;
        
        node = document.getElementById("r1selected");
        if(node.getAttribute("class") == "hide")
        {
          node.setAttribute("class","show");
          node = document.getElementById("title");
          node.firstChild.nodeValue = "Archimedean Spiral Maker";
          spiralType = 1;

          node = document.getElementById("s2length");
          var x = round(600/199*(segments-1),0); 
          node.setAttribute("width",x);
          
          node = document.getElementById("slider2");
          node.setAttribute("transform","translate("+x+",0)");

          node = document.getElementById("r2selected");
          node.setAttribute("class","hide");
        }
        else
        {
          node.setAttribute("class","hide");
          node = document.getElementById("title");
          node.firstChild.nodeValue = "Fibonacci Spiral Maker";
          spiralType = 2;

          if(segments>25)
          {
            segments = 25;
            node = document.getElementById("slider2Value");
            node.firstChild.nodeValue = segments;
          }
          
          node = document.getElementById("s2length");
          var x = round(600/24*(segments-1),0); 
          node.setAttribute("width",x);
          
          node = document.getElementById("slider2");
          node.setAttribute("transform","translate("+x+",0)");

          node = document.getElementById("r2selected");
          node.setAttribute("class","show");
        }

        drawSpiral();
      }

      function checkbox(e)
      {
        var node;
        try
        {
          var id = e.target.parentNode.getAttribute("id");
          if(id=="cb1")
          {
            node = document.getElementById("cb1checked");
            if(node.getAttribute("class") == "hide")
            {
              node.setAttribute("class","show");
              cw = true;
            }
            else
            {
              node.setAttribute("class","hide");
              cw = false;
            }
          }
          
          if(id=="cb4")
          {
            node = document.getElementById("cb4checked");
            if(node.getAttribute("class") == "hide")
            {
              node.setAttribute("class","show");
              node = document.getElementById("sp2");
              node.setAttribute("class","show");
              overlay = true;
            }
            else
            {
              node.setAttribute("class","hide");
              node = document.getElementById("sp2");
              node.setAttribute("class","hide");
              overlay = false;
            }
          }

          drawSpiral();
          
        }catch(e){}
      }

      function Menu()
      {
        document.getElementById("menu").setAttribute("class","show");
      }

      function MenuExit()
      {
        document.getElementById("menu").setAttribute("class","hide");
      }

      function Color(e,c)
      {
        try
        {
          var node;
          var x;
          var min=0;   //Slider Minimum
          var max=255;    //Slider Maximum
          var minx = 0;
          var maxx = 600;

          if(timerId!=null) clearTimeout(timerId);

          var id = e.target.parentNode.getAttribute("id");
          switch(c)
          {
            case 1: {if(id!="sliderred") return; break;}
            case 2: {if(id!="slidergreen") return; break;}
            case 3: {if(id!="sliderblue") return; break;}
          }

          id = id.replace("slider","");  

          // SVG point transformation required
          var m = document.getElementById(id+"slider").getScreenCTM();
          var p = document.documentElement.createSVGPoint();
          if(isTouchDevice)
          {
            if(e.changedTouches.length>1) return;
            var touch = e.changedTouches[0];
            p.x = touch.clientX;
            p.y = touch.clientY;
          }
          else
          {
            p.x = e.clientX;
            p.y = e.clientY;
          }
          p = p.matrixTransform(m.inverse());
          x = Math.round(p.x*10)/10

          if(x<minx) x=minx;
          if(x>maxx) x=maxx;
        
          node = document.getElementById("slider"+id);
          node.setAttribute("transform","translate("+x+",0)");

          node = document.getElementById(id+"length");
          node.setAttribute("width",x);

          var color = round((max-min)/(maxx-minx)*x + min,0);

          rgb[c-1] = color;
          hexcolor = (Number(rgb[0])).toString(16);
          if(hexcolor.length==1) hexcolor = "0"+hexcolor;

          var hex = (Number(rgb[1])).toString(16);
          if(hex.length==1) hex = "0"+hex;
          hexcolor += hex;
          
          hex = Number(rgb[2]).toString(16);
          if(hex.length==1) hex = "0"+hex;
          hexcolor += hex;
          
          hex = Number(color).toString(16);
          if(hex.length==1) hex = "0"+hex;

          node = document.getElementById("slider"+id+"Value");
          node.firstChild.nodeValue = color + " (#"+hex.toUpperCase()+")";
                    
          node = document.getElementById("sp1");
          node.setAttribute("style","stroke:#"+hexcolor+";");
          node = document.getElementById("sp2");
          node.setAttribute("style","stroke:#"+hexcolor+";");

          node = document.getElementById("fillcolor");
          node.setAttribute("style","fill:#"+hexcolor+";stroke:#999;");
          
          timerId = setTimeout(drawSpiral,50);
          
        }catch(e){}
      }

      function Rotation(e)
      {
        try
        {
          var node;
          var x;
          var min=-180;   //Slider Minimum
          var max=180;    //Slider Maximum
          var minx = 0;
          var maxx = 600;

          if(timerId!=null) clearTimeout(timerId);

          var id = e.target.parentNode.getAttribute("id");
          if(id!="sliderdeg") return;

          // SVG point transformation required
          var m = document.getElementById("degslider").getScreenCTM();
          var p = document.documentElement.createSVGPoint();
          if(isTouchDevice)
          {
            if(e.changedTouches.length>1) return;
            var touch = e.changedTouches[0];
            p.x = touch.clientX;
            p.y = touch.clientY;
          }
          else
          {
            p.x = e.clientX;
            p.y = e.clientY;
          }
          p = p.matrixTransform(m.inverse());
          x = Math.round(p.x*10)/10

          if(x<minx) x=minx;
          if(x>maxx) x=maxx;

          node = document.getElementById("sliderdeg");
          node.setAttribute("transform","translate("+x+",0)");
          
          node = document.getElementById("deglength");
          node.setAttribute("width",x);

          rotate = round((max-min)/(maxx-minx)*x + min,0);

          node = document.getElementById("sliderdegValue");
          node.firstChild.nodeValue = rotate;
          
          node = document.getElementById("degpointer");
          node.setAttribute("transform","rotate("+rotate+")");

          node = document.getElementById("spiral");
          node.setAttribute("transform","rotate("+rotate+")");
          
        }catch(e){}
      }

      function showCode()
      {
        var ser = new XMLSerializer();
        var doc = window.open("about:blank").document;
        var docText;

        docText = '<svg width="100%" height="100%" viewBox="0 0 600 600"';
        docText += '\n     xmlns=""';
        docText += '\n     xmlns:xlink="">';

        docText += "\n\n  "+ser.serializeToString(document.getElementById("credits"));
        docText = docText.replace(' id="credits"',''); 
        docText = docText.replace(' xmlns="http://www.w3.org/2000/svg"',''); 

        docText += "\n\n  "+ser.serializeToString(document.getElementsByTagName("defs")[0]);
        docText = docText.replace(' id="spirals"',''); 
        if(repeat==0) docText = docText.replace(' id="spiral"',''); 
        docText = docText.replace(' xmlns="http://www.w3.org/2000/svg"',''); 
        docText = docText.replace('<g id="rotatedSpirals"','  <g id="rotatedSpirals"'); 
        docText = docText.replace(/<use/g,'\n          <use'); 
        docText = docText.replace('</g></g>','\n        </g>\n      </g>'); 
        docText += "\n";
                
        docText += "\n  "+ser.serializeToString(document.getElementById("sp1"));
        docText = docText.replace(' xmlns="http://www.w3.org/2000/svg"',''); 
        docText = docText.replace(/ xmlns:xlink="http:\x2f\x2fwww.w3.org\x2f1999\x2fxlink"/g,''); 
        docText = docText.replace(' id="sp1"',''); 
        docText = docText.replace('width="640"','width="600"'); 
        docText = docText.replace('height="640"','height="600"'); 

        if(overlay)
        {
          docText += "\n  "+ser.serializeToString(document.getElementById("sp2"));
          docText = docText.replace(' xmlns="http://www.w3.org/2000/svg"',''); 
          docText = docText.replace(' xmlns:xlink="http://www.w3.org/1999/xlink"',''); 
          docText = docText.replace(' id="sp2"',''); 
          docText = docText.replace('width="640"','width="600"'); 
          docText = docText.replace('height="640"','height="600"'); 
          docText = docText.replace('translate(640','translate(600'); 
        }

        docText = docText.replace(/ class="show"/g,''); 

        docText = docText.replace('     xmlns=""','     xmlns="http://www.w3.org/2000/svg"'); 
        docText = docText.replace('     xmlns:xlink=""','     xmlns:xlink="http://www.w3.org/1999/xlink"'); 
        docText += "\n\n</svg>";
        
        doc.write("<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Spiral Maker Code</title>\r\n</head>\r\n<body><pre overflow='auto'></pre></body>\r\n</html>");
        doc.close();
        
        doc.body.firstChild.appendChild(doc.createTextNode(docText));
      }
      
    }();
  ]]>
  </script>

  <style type="text/css"><![CDATA[
    @import url('https://fonts.googleapis.com/css?family=Roboto:500,500i');
    text {font-family:Roboto, Arial, sans-serif;font-size:28px;}
    .title {font-family:Roboto, Arial, sans-serif;font-size:44px;text-anchor:middle;fill:navy;}
    .link {fill:navy;font-size:30px;text-anchor:middle;cursor:pointer;}
    .link:hover {fill:red;}
    .s1 {fill:red;stroke:none;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round;}
    .s2 {fill:none;stroke:black;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round;}

    .show {display:initial;}
    .hide {display:none;}
  ]]>
  </style>

  <desc id="credits">

  </desc>

  <defs>
    <radialGradient id="rg" cx="0.273" cy="0.27" r="50%">
      <stop offset="5%" style="stop-color:violet;"/>
      <stop offset="15%" style="stop-color:indigo;"/>
      <stop offset="30%" style="stop-color:blue;"/>
      <stop offset="40%" style="stop-color:lime;"/>
      <stop offset="75%" style="stop-color:yellow;"/>
      <stop offset="90%" style="stop-color:orange;"/>
      <stop offset="100%" style="stop-color:red;"/>
    </radialGradient>
    
    <symbol id="spiralDesign" viewBox="0 0 148.46 148.46">
      <g id="spirals" transform="translate(74.23,74.23) rotate(0)" style="fill:none;stroke-width:2px;stroke-linecap:round;">
        <path id="spiral" d="M0,0a1,1,0,0,1,1,1a1,1,0,0,1,-1,1a2,2,0,0,1,-2,-2a3,3,0,0,1,3,-3a5,5,0,0,1,5,5a8,8,0,0,1,-8,8a13,13,0,0,1,-13,-13a21,21,0,0,1,21,-21a34,34,0,0,1,34,34a55,55,0,0,1,-55,55" style="vector-effect:non-scaling-stroke;" transform="rotate(0)"/>
      <g id="rotatedSpirals"><use xlink:href="#spiral" transform="rotate(13.85)"/><use xlink:href="#spiral" transform="rotate(27.7)"/><use xlink:href="#spiral" transform="rotate(41.55)"/><use xlink:href="#spiral" transform="rotate(55.4)"/><use xlink:href="#spiral" transform="rotate(69.25)"/><use xlink:href="#spiral" transform="rotate(83.1)"/><use xlink:href="#spiral" transform="rotate(96.95)"/><use xlink:href="#spiral" transform="rotate(110.8)"/><use xlink:href="#spiral" transform="rotate(124.65)"/><use xlink:href="#spiral" transform="rotate(138.5)"/><use xlink:href="#spiral" transform="rotate(152.35)"/><use xlink:href="#spiral" transform="rotate(166.2)"/><use xlink:href="#spiral" transform="rotate(180.05)"/><use xlink:href="#spiral" transform="rotate(193.9)"/><use xlink:href="#spiral" transform="rotate(207.75)"/><use xlink:href="#spiral" transform="rotate(221.6)"/><use xlink:href="#spiral" transform="rotate(235.45)"/><use xlink:href="#spiral" transform="rotate(249.3)"/><use xlink:href="#spiral" transform="rotate(263.15)"/><use xlink:href="#spiral" transform="rotate(277)"/><use xlink:href="#spiral" transform="rotate(290.85)"/><use xlink:href="#spiral" transform="rotate(304.7)"/><use xlink:href="#spiral" transform="rotate(318.55)"/><use xlink:href="#spiral" transform="rotate(332.4)"/><use xlink:href="#spiral" transform="rotate(346.25)"/></g></g>
    </symbol>
  </defs>
  
  <rect y="40" width="660" height="660" style="display:none;fill:none;stroke:red;"/>
  
  <text id="title" x="330" y="40" class="title">Fibonacci Spiral Maker</text>

  <g transform="translate(30,0)">
    <text id="getCode" x="300" y="750" class="link">Get the Code for the Spiral Design</text>
  </g>
  
  <g transform="translate(10,50)">
    <use id="sp1" width="640" height="640" xlink:href="#spiralDesign" style="stroke:url(#rg);"/>
    <use id="sp2" class="show" width="640" height="640" transform="translate(640,0) scale(-1,1)" xlink:href="#spiralDesign" style="stroke:url(#rg);"/>
  </g>
  
  <g id="sliders" class="show">
    <!-- Number of Spirals Slider -->
    <g transform="translate(30,880)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
      <text x="300" y="8" style="fill:#666666;stroke:none;text-anchor:middle;">Number of Spirals: <tspan id="slider1Value" style="fill:navy;font-weight:500;stroke:none;">26</tspan></text>
      <rect id="s1slider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
      <rect id="s1length" x="-2" y="26" width="420.9" height="8" style="fill:magenta;stroke:none;"/>
      <g id="slider1" transform="translate(420.9,0)" style="stroke:none;">
        <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
        <circle cx="0" cy="30" r="16" style="fill:magenta;stroke:none;"/>
      </g>
    </g>

    <!-- Number of Segments Slider -->
    <g transform="translate(30,810)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
      <text x="300" y="8" style="fill:#666666;stroke:none;text-anchor:middle;">Number of Segments: <tspan id="slider2Value" style="fill:navy;font-weight:500;stroke:none;">10</tspan></text>
      <rect id="s2slider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
      <rect id="s2length" x="-2" y="26" width="226.6" height="8" style="fill:magenta;stroke:none;"/>
      <g id="slider2" transform="translate(226.6,0)" style="stroke:none;">
        <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
        <circle cx="0" cy="30" r="16" style="fill:magenta;stroke:none;"/>
      </g>
    </g>
  </g>
  
  <g id="checkboxes">
    <g id="cb1" transform="translate(30,950)" style="font-size:28px;fill:none;stroke:black;stroke-width:4px;cursor:pointer;">
      <path id="cb1checked" class="show" d="M0,0l25,25m0,-25l-25,25" style="stroke:red;"/>
      <rect x="0" y="0" width="25" height="25" style="fill:white;fill-opacity:0.001;"/>
      <text x="35" y="23" style="fill:black;stroke:none;">Clockwise</text>
    </g>

    <g id="cb4" transform="translate(490,950)" style="font-size:28px;fill:none;stroke:black;stroke-width:4px;cursor:pointer;">
      <path id="cb4checked" class="show" d="M0,0l25,25m0,-25l-25,25" style="stroke:red;"/>
      <rect x="0" y="0" width="25" height="25" style="fill:white;fill-opacity:0.001;"/>
      <text x="35" y="23" style="fill:black;stroke:none;">Overlay</text>
    </g>
  </g>

  <g id="radio" transform="translate(230,950)" style="font-size:28px;fill:white;stroke:black;stroke-width:4px;cursor:pointer;">
    <g id="r1">
      <circle cx="25" cy="-2" r="10"/>
      <circle id="r1selected" cx="25" cy="-2" r="5" class="hide" style="fill:red;stroke:none;"/>
      <text x="50" y="7" style="fill:black;stroke:none;">Archimedian</text>
    </g>
    <g id="r2">
      <circle cx="25" cy="29" r="10"/>
      <circle id="r2selected" cx="25" cy="29" r="5" class="show" style="fill:red;stroke:none;"/>
      <text x="50" y="38" style="fill:black;stroke:none;">Fibonacci</text>
    </g>
  </g>

  <g id="menuicon" transform="translate(0,10) scale(0.5)">
    <rect width="100" height="100" rx="20" style="fill:white;stroke:black;stroke-width:1"/>
    <path d="M20,30l60,0M20,50l60,0M20,70l60,0" style="stroke:#999999;stroke-width:8px;"/>
  </g>

  <g id="menu" transform="translate(30,500)" class="hide">
    <g transform="scale(0.6)">
      <rect width="1000" height="850" rx="60" style="opacity:0.9;fill:#eeeeee;stroke:black;stroke-width:1"/>
      <text x="500" y="100" style="font-size:80px;fill:navy;text-anchor:middle;">Settings</text>
      <g id="menuexit" style="fill:white;stroke:black;stroke-width:4px">
        <rect x="880" y="40" width="80" height="80" rx="20" style="stroke:#999999;"/>
        <path d="M900,60l40,40m0,-40l-40,40" style="stroke-width:8px"/>
      </g>
    </g>

    <g id="color" transform="translate(0,40)">
      <text x="280" y="90" style="fill:navy;font-size:30px;text-anchor:end;">Stroke Color:</text>
      <rect id="fillcolor" x="300" y="65" width="50" height="30" style="fill:#FF0000;stroke:#999;"/>
      <g transform="translate(30,120) scale(0.9)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
        <text x="300" y="8" style="fill:red;stroke:none;text-anchor:middle;">Red: <tspan id="sliderredValue" style="font-weight:500;stroke:none;">256 (#FF)</tspan></text>
        <rect id="redslider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
        <rect id="redlength" x="-2" y="26" width="600" height="8" style="fill:red;stroke:none;"/>
        <g id="sliderred" transform="translate(600,0)" style="stroke:none;">
          <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
          <circle cx="0" cy="30" r="16" style="fill:red;stroke:none;"/>
        </g>
      </g>
      <g transform="translate(30,180) scale(0.9)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
        <text x="300" y="8" style="fill:green;stroke:none;text-anchor:middle;">Green: <tspan id="slidergreenValue" style="font-weight:500;stroke:none;">0 (#00)</tspan></text>
        <rect id="greenslider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
        <rect id="greenlength" x="-2" y="26" width="0" height="8" style="fill:green;stroke:none;"/>
        <g id="slidergreen" transform="translate(0,0)" style="stroke:none;">
          <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
          <circle cx="0" cy="30" r="16" style="fill:green;stroke:none;"/>
        </g>
      </g>
      <g transform="translate(30,240) scale(0.9)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
        <text x="300" y="8" style="fill:blue;stroke:none;text-anchor:middle;">Blue: <tspan id="sliderblueValue" style="font-weight:500;stroke:none;">0 (#00)</tspan></text>
        <rect id="blueslider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
        <rect id="bluelength" x="-2" y="26" width="0" height="8" style="fill:blue;stroke:none;"/>
        <g id="sliderblue" transform="translate(0,0)" style="stroke:none;">
          <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
          <circle cx="0" cy="30" r="16" style="fill:blue;stroke:none;"/>
        </g>
      </g>
    </g>
    
    <g id="rotation" transform="translate(0,300)">
      <text x="280" y="105" style="fill:navy;font-size:30px;text-anchor:end;">Rotate:</text>
      <g transform="translate(330,90)" style="fill:none;stroke:black;stroke-width:2px;">
        <circle r="25"/>
        <path id="degpointer" d="M0,0l0,-25l-5,10l5,-10l5,10" transform="rotate(0)"/>
      </g>
      
      <g transform="translate(30,150) scale(0.9)" style="font-size:28px;fill:none;stroke:black;stroke-width:0.5px;">
        <text x="300" y="8" style="fill:#666;stroke:none;text-anchor:middle;">Degrees: <tspan id="sliderdegValue" style="font-weight:500;stroke:none;">0</tspan></text>
        <rect id="degslider" x="-2" y="27" width="600" height="6" style="fill:black;stroke:none;"/>
        <rect id="deglength" x="-2" y="26" width="300" height="8" style="fill:#666;stroke:none;"/>
        <g id="sliderdeg" transform="translate(300,0)" style="stroke:none;">
          <rect x="-280" width="600" height="60" style="fill:white;opacity:0.01;"/>
          <circle cx="0" cy="30" r="16" style="fill:#666;stroke:none;"/>
          <use x="-15" y="15" width="30" height="30" xlink:href="#staricon"/>
        </g>
      </g>
    </g>
  </g>
    
  <a xlink:href="http://steamcoded.org">
    <g id="credits" transform="translate(330,1050) scale(0.75)" style="text-anchor:middle;fill:black;stroke:none;">
      <text x="2" y="2" style="font-size:40px;font-family:Roboto, Arial, sans-serif;font-weight:500;font-style:italic;fill:#333333;stroke:#333333;stroke-width:0.5px;">STEAM<tspan style="font-variant:small-caps;">coded.org</tspan></text>
      <text x="0" y="0" style="font-size:40px;font-family:Roboto, Arial, sans-serif;font-weight:500;font-style:italic;"><tspan style="fill:red;">S</tspan><tspan style="fill:orange;">T</tspan><tspan style="fill:lime;">E</tspan><tspan style="fill:#5555ff;">A</tspan><tspan style="fill:purple;">M</tspan><tspan style="fill:blue;font-variant:small-caps;">coded.org</tspan></text>
    </g>
  </a>    
 
</svg>